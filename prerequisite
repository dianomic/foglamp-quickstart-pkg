#!/bin/bash
##--------------------------------------------------------------------
## Copyright (c) 2018 Dianomic Systems
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##--------------------------------------------------------------------
##
## Author: Ashish Jabble
##

set -e

GIT_ROOT=`pwd`

USAGE="./$(basename "$0") [no-dep|no-clone|clean]
This script is used to clone FogLAMP, FogLAMP South Plugin and FogLAMP-gui, install dependencies and build artifacts, required for quickstart debian package creation
Arguments:
 no-dep   - Skip linux dependencies (i.e. done via apt or apt-get) installation
 no-clone - Skip to clone the git repositories & no linux dependencies will be installed (superset of --no-dep)
 clean    - Remove all the clone git repositories
"

install_deps () {
    yes Y |  sudo apt-get update
    yes Y |  sudo apt-get upgrade

    yes Y |  sudo apt-get install curl

    yes Y |  sudo apt-get install cmake g++ make build-essential autoconf automake
    yes Y |  sudo apt-get install libtool libboost-dev libboost-system-dev libboost-thread-dev libpq-dev libssl-dev
    yes Y |  sudo apt-get install python-setuptools python3-dbus python3-dev python3-pip

    yes Y |  sudo apt-get install uuid-dev

    yes Y |  sudo apt-get install sqlite3 libsqlite3-dev

    yes Y | sudo apt-get install nginx-light

    curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
    yes Y | sudo apt-get install -y nodejs
    yes Y | sudo npm install -g yarn
}

remove_repos () {
    rm -rf ${GIT_ROOT}/FogLAMP
    rm -rf ${GIT_ROOT}/foglamp-gui
    rm -rf ${GIT_ROOT}/foglamp-south-sinusoid
}

clone_repos () {
    git clone -b develop --single-branch https://github.com/foglamp/FogLAMP.git
    git clone -b develop --single-branch https://github.com/foglamp/foglamp-gui.git
    git clone https://github.com/foglamp/foglamp-south-sinusoid.git
}

install_foglamp () {
    cd ${GIT_ROOT}/FogLAMP
    sudo make install
    cd ..
}

build_gui () {
    cd ${GIT_ROOT}/foglamp-gui
    rm -rf dist
    ./build --clean-start
    cd ..
}

##########################################
# Execute the command specified in $OPTION
##########################################
execute_command() {

  if [[ "$OPTION" == "NO_DEP" ]]
  then
    echo "Skipping dependencies installation"
    clone_repos
    install_foglamp
    build_gui

  elif [[ "$OPTION" == "NO_DEP_NO_GIT_CLONE" ]]
  then
    echo "Skipping dependencies installation and git clone"
    install_foglamp
    build_gui

  elif [[ "$OPTION" == "CLEAN" ]]
  then
    echo "Removing cloned repo"
    remove_repos

  elif [[ "$OPTION" == "SHOW_HELP" ]]
  then
    echo "${USAGE}"
  fi
}

start () {
  install_deps
  remove_repos # if re-executed
  clone_repos
  install_foglamp
  build_gui
}

if [ $# -gt 0 ]
then
  for i in "$@"
  do
    case $i in
      --no-dep)
        OPTION="NO_DEP"
      ;;

      --no-clone)
        OPTION="NO_DEP_NO_GIT_CLONE"
      ;;

      --clean)
        OPTION="CLEAN"
      ;;

      -h|--help)
        OPTION="SHOW_HELP"
      ;;

      *)
        echo "Unrecognized option: $i"
        exit 1
      ;;
    esac
    execute_command
  done
else
  start
fi
